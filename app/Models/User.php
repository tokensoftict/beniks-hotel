<?php

namespace App\Models;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;
use Spatie\Activitylog\Traits\LogsActivity;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable, LogsActivity;


    protected $casts = [
        'group_id' => 'int',
        'status' => 'bool'
    ];

    protected $dates = [
        'email_verified_at',
        'last_login'
    ];

    protected $hidden = [
        'password',
        'remember_token'
    ];

    protected $fillable = [
        'name',
        'username',
        'email',
        'group_id',
        'department',
        'warehousestore_id',
        'email_verified_at',
        'password',
        'status',
        'last_login',
        'remember_token'
    ];

    public static $profile_fields = [
        'name',
        'username',
        'email',
        'password',
    ];

    public static $rules = [
        'name' => 'required|string',
        'username' => 'required|string',
    ];

    public static $rules_update = [
        'name' => 'required|string',
        'username' => 'required|string',
    ];

    public function group()
    {
        return $this->belongsTo(Group::class);
    }

    public function department()
    {
        return $this->belongsTo(Warehousestore::class, 'warehousestore_id');
    }


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function($user){
            /*
            $user->customer_id = 0;
            $user->customer_type = "   ";
            */
        });

        self::created(function($user){
        /*
            $customer = new Customer();

            list($surname, $first_name) = array_pad(explode(' ',trim($user->name)), 2, null);

            $customer->firstname = $surname;
            $customer->lastname = $first_name;
            $customer->email = $user->email;

            $customer->save();

            $user->customer_id = $customer->id;
            $user->customer_type = "App\\Models\\Customer";

            $user->save();
            */

        });


        self::updated(function($user){
            /*
            if($user->customer_id != "0")
            {
                $customer = Customer::find($user->customer_id);

                list($surname, $first_name) = array_pad(explode(' ',trim($user->name)), 2, null);

                $customer->firstname = $surname;
                $customer->lastname = $first_name;
                $customer->email = $user->email;

                $customer->save();

            }
            */
        });

    }

}
